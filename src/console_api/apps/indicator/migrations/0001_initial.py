# Generated by Django 4.0.4 on 2022-12-21 10:24

import apps.models.abstract
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Indicator',
            fields=[
                ('created_at', apps.models.abstract.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('updated_at', apps.models.abstract.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('id', models.CharField(default=uuid.uuid4, editable=False, max_length=36, primary_key=True, serialize=False)),
                ('ioc_type', models.CharField(choices=[('ip', 'ip'), ('domain', 'domain'), ('hash', 'hash')], max_length=32, verbose_name='Тип индикатора')),
                ('value', models.CharField(max_length=512, verbose_name='Значение индикатора')),
                ('context', models.JSONField(verbose_name='Данные контекста из Фидов и из Сервисов Обогащения Информацией')),
                ('is_sending_to_detections', models.BooleanField(default=True, verbose_name='Обнаружение по индикатору должно улетать в detections?')),
                ('is_false_positive', models.BooleanField(default=False, verbose_name='Ложноположительный индикатор?')),
                ('weight', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Вес индикатора')),
                ('tags_weight', models.DecimalField(decimal_places=3, max_digits=6, validators=[django.core.validators.MaxValueValidator(100), django.core.validators.MinValueValidator(0)], verbose_name='Средний вес тегов фида')),
                ('is_archived', models.BooleanField(default=False, verbose_name='Статус архивирования')),
                ('false_detected_counter', models.BigIntegerField(verbose_name='Количество ложных срабатываний')),
                ('positive_detected_counter', models.BigIntegerField(verbose_name='Количество подтвержденных срабатываний')),
                ('total_detected_counter', models.BigIntegerField(verbose_name='Всего срабатываний')),
                ('first_detected_at', models.DateTimeField(verbose_name='Дата и время первого срабатывания')),
                ('last_detected_at', models.DateTimeField(verbose_name='Дата и время последнего срабатывания')),
                ('created_by', models.ForeignKey(blank=True, help_text='Указывается, когда Индикатор создан пользователем', null=True, on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='Кем создано')),
            ],
            options={
                'verbose_name': 'Индикатор',
                'verbose_name_plural': 'Индикаторы',
                'db_table': 'indicators',
                'unique_together': {('ioc_type', 'value')},
            },
        ),
        migrations.CreateModel(
            name='Session',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('access_token', models.CharField(max_length=255, verbose_name='Токен доступа MD5')),
                ('last_activity_at', models.DateTimeField(editable=False, verbose_name='Дата и время последней активности')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Дата и время создания сессии')),
                ('user_id', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to=settings.AUTH_USER_MODEL, verbose_name='ID пользователя')),
            ],
            options={
                'verbose_name': 'Сессия',
                'verbose_name_plural': 'Сессии',
                'db_table': 'sessions',
            },
        ),
        migrations.CreateModel(
            name='IndicatorActivities',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', apps.models.abstract.CreationDateTimeField(auto_now_add=True, verbose_name='создано')),
                ('updated_at', apps.models.abstract.ModificationDateTimeField(auto_now=True, verbose_name='изменено')),
                ('type', models.CharField(choices=[('add_comment', 'add-comment'), ('add_tag', 'add-tag'), ('remove_tag', 'remove-tag'), ('move_to_archive', 'move-to-archive'), ('move_from_archive', 'move-from-archive')], max_length=50, verbose_name='Тип')),
                ('details', models.JSONField()),
                ('indicator', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='activities', to='indicator.indicator', verbose_name='Активность по индикатору')),
            ],
            options={
                'verbose_name': 'Активность по Индикатору',
                'verbose_name_plural': 'Активности по Индикатору',
                'db_table': 'activities',
            },
        ),
    ]
